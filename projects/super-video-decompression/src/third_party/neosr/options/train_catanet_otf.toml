
name = "train_catanet_otf"
model_type = "otf"
scale = 4
use_amp = true
bfloat16 = true
fast_matmul = true
#compile = true
#manual_seed = 1024

[datasets.train]
type = "otf"
dataroot_gt = 'C:\datasets\gt\'
patch_size = 64
batch_size = 8
#accumulate = 1
augmentation = [ "none", "mixup", "cutmix", "resizemix", "cutblur" ]
aug_prob = [ 0.5, 0.1, 0.1, 0.1, 0.5 ]

[degradations]
resize_prob = [ 0.3, 0.4, 0.3 ]
resize_range = [ 0.5, 1.5 ]
gaussian_noise_prob = 0.2
noise_range = [ 0, 2 ]
poisson_scale_range = [ 0.05, 0.25 ]
gray_noise_prob = 0.1
jpeg_range = [ 40, 95 ]
second_blur_prob = 0.4
resize_prob2 = [ 0.3, 0.4, 0.3 ]
resize_range2 = [ 0.3, 1.5 ]
gaussian_noise_prob2 = 0.2
noise_range2 = [ 0, 2 ]
poisson_scale_range2 = [ 0.05, 0.1 ]
gray_noise_prob2 = 0.1
jpeg_range2 = [ 35, 95 ]

blur_kernel_size = 7
kernel_list = [
  "iso",
  "aniso",
  "generalized_iso",
  "generalized_aniso",
  "plateau_iso",
  "plateau_aniso"
]
kernel_prob = [ 0.45, 0.25, 0.12, 0.03, 0.12, 0.03 ]
sinc_prob = 0.1
blur_sigma = [ 0.2, 3 ]
betag_range = [ 0.5, 4 ]
betap_range = [ 1, 2 ]
blur_kernel_size2 = 9
kernel_list2 = [
  "iso",
  "aniso",
  "generalized_iso",
  "generalized_aniso",
  "plateau_iso",
  "plateau_aniso"
]
kernel_prob2 = [ 0.45, 0.25, 0.12, 0.03, 0.12, 0.03 ]
sinc_prob2 = 0.1
blur_sigma2 = [ 0.2, 1.5 ]
betag_range2 = [ 0.5, 4 ]
betap_range2 = [ 1, 2 ]
final_sinc_prob = 0.8

[datasets.val]
name = "val"
type = "paired"
dataroot_gt = 'C:\datasets\val\gt\'
dataroot_lq = 'C:\datasets\val\lq\'
[val]
val_freq = 1000
#tile = 200
#[val.metrics.psnr]
#type = "calculate_psnr"
#[val.metrics.ssim]
#type = "calculate_ssim"
#[val.metrics.dists]
#type = "calculate_dists"
#better = "lower"
#[val.metrics.topiq]
#type = "calculate_topiq"

[path]
#pretrain_network_g = 'experiments\pretrain_g.pth'
#pretrain_network_d = 'experiments\pretrain_d.pth'

[network_g]
type = "catanet"

[network_d]
type = "metagan"

[train]
ema = 0.999
wavelet_guided = true
wavelet_init = 80000
#sam = "fsam"
#sam_init = 1000
#eco = true
#eco_init = 15000
#match_lq = true

[train.optim_g]
type = "adan_sf"
lr = 1e-3
betas = [ 0.98, 0.92, 0.99 ]
weight_decay = 0.01
schedule_free = true
warmup_steps = 1600

[train.optim_d]
type = "adan_sf"
lr = 1e-4
betas = [ 0.98, 0.92, 0.99 ]
weight_decay = 0.01
schedule_free = true
warmup_steps = 600

#  losses
[train.mssim_opt]
type = "mssim_loss"
loss_weight = 1.0

[train.consistency_opt]
type = "consistency_loss"
loss_weight = 1.0

[train.ldl_opt]
type = "ldl_loss"
loss_weight = 1.0

[train.fdl_opt]
type = "fdl_loss"
model = "dinov2" # "vgg", "resnet", "effnet"
loss_weight = 0.75

[train.gan_opt]
type = "gan_loss"
gan_type = "bce"
loss_weight = 0.3

#[train.msswd_opt]
#type = "msswd_loss"
#loss_weight = 1.0

#[train.perceptual_opt]
#type = "vgg_perceptual_loss"
#loss_weight = 0.5
#criterion = "huber"
##patchloss = true
##ipk = true
##patch_weight = 1.0

#[train.dists_opt]
#type = "dists_loss"
#loss_weight = 0.5

#[train.ff_opt]
#type = "ff_loss"
#loss_weight = 0.35

#[train.ncc_opt]
#type = "ncc_loss"
#loss_weight = 1.0

#[train.kl_opt]
#type = "kl_loss"
#loss_weight = 1.0

[logger]
total_iter = 1000000
save_checkpoint_freq = 1000
use_tb_logger = true
#save_tb_img = true
#print_freq = 100
